apply plugin: "java"
apply plugin: "spring-cloud-contract"
apply plugin: "org.asciidoctor.convert"

contracts {
    targetFramework = 'JUNIT'
    testMode = 'MOCKMVC'
    basePackageForTests = "com.cloud.reservation.service.contract"
    baseClassForTests = "com.cloud.reservation.service.contract.ReservationControllerBase"
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-integration:$springBootVersion"
    compile "org.springframework.data:spring-data-rest-webmvc:2.6.6.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.cloud:spring-cloud-starter-config"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    compile "org.springframework.cloud:spring-cloud-starter-stream-rabbit"
    compile "org.springframework.cloud:spring-cloud-starter-zipkin"

    testCompile "org.springframework.cloud:spring-cloud-contract-verifier"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "io.rest-assured:rest-assured:$restAssuredVersion"
    testCompile "io.rest-assured:spring-mock-mvc:$restAssuredVersion"
    testCompile "com.jayway.jsonpath:json-path:2.4.0"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc"

    runtime "com.h2database:h2:1.4.196"
}

asciidoctor {
    sourceDir = file('build/snippets/')
    options doctype: 'book'
    backends 'html'
    attributes snippets: 'build/snippets'
    outputDir = file('build/generated-docs')
}

sourceSets {
    main {
        java { srcDirs = ['src/kotlin'] }
        resources { srcDirs = ['src/resources'] }
    }
}